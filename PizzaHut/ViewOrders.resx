<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        J/aOt5NP0W96SSSYoi8SR//Z
</value>
  </data>
</root>